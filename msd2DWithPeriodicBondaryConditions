def msd2DWithPeriodicBondaryConditions(timeStep,xData,yData,boxLength):
    dr = np.zeros(len(timeStep))

    # Calcular o deslocamento quadrático médio
    for i in range(1, len(timeStep)):
        
        x0, y0 = x[i-1], y[i-1]
    
        x[i] = (x[i] - x0)
        x[i] = x[i] - np.round(x[i] / boxLength) * boxLength
        x[i] = x[i] + x0

        y[i] = (y[i] - y0)
        y[i] = y[i] - np.round(y[i] / boxLength) * boxLength
        y[i] = y[i] + y0

        dr[i] = (x[i] - x0)**2 + (y[i] - y0)**2
    array= dr
    msd = [sum(array[:i+1]) for i in range(len(array))]
        
    return msd  
